// <auto-generated />
using System;
using EasyTicketsSolution.WebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyTicketsSolution.Data.Migrations
{
    [DbContext(typeof(EasyTickets_WebAppContext))]
    partial class EasyTickets_WebAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<decimal?>("Cost")
                        .HasColumnType("money");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateBooking")
                        .HasColumnType("date");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.BookingDetail", b =>
                {
                    b.Property<int>("BookingDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Booking_DetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingDetailId"), 1L, 1);

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Seat")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("ShowAsignmentId")
                        .HasColumnType("int");

                    b.HasKey("BookingDetailId");

                    b.HasIndex("BookingId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ShowAsignmentId");

                    b.ToTable("Booking_Detail", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("ZipCode")
                        .HasColumnType("bigint")
                        .HasColumnName("Zip_code");

                    b.HasKey("CityId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("Phone")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Mail" }, "UQ__Customer__2724B2D155A2B240")
                        .IsUnique()
                        .HasFilter("[Mail] IS NOT NULL");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("date");

                    b.HasKey("ProductId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TheaterId")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("TheaterId");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<int?>("TheaterId")
                        .HasColumnType("int");

                    b.HasKey("ServiceId");

                    b.HasIndex("TheaterId");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.ShowAsignment", b =>
                {
                    b.Property<int>("ShowAsignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowAsignmentId"), 1L, 1);

                    b.Property<int?>("NumberOfTickets")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShowTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.HasKey("ShowAsignmentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RoomId");

                    b.ToTable("ShowAsignment", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.ShowType", b =>
                {
                    b.Property<int>("ShowTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowTypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShowTypeId");

                    b.ToTable("ShowType", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Theater", b =>
                {
                    b.Property<int>("TheaterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TheaterId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("Phone")
                        .HasColumnType("bigint");

                    b.HasKey("TheaterId");

                    b.ToTable("Theater", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E440DCB511")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__UserRole__AF2760ADB6DE45EE");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Booking", b =>
                {
                    b.HasOne("EasyTicketsSolution.WebApp.Data.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Booking__Custome__571DF1D5");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.BookingDetail", b =>
                {
                    b.HasOne("EasyTicketsSolution.WebApp.Data.Booking", "Booking")
                        .WithMany("BookingDetails")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Booking_D__Booki__59FA5E80");

                    b.HasOne("EasyTicketsSolution.WebApp.Data.Service", "Service")
                        .WithMany("BookingDetails")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__Booking_D__Servi__5BE2A6F2");

                    b.HasOne("EasyTicketsSolution.WebApp.Data.ShowAsignment", "ShowAsignment")
                        .WithMany("BookingDetails")
                        .HasForeignKey("ShowAsignmentId")
                        .HasConstraintName("FK__Booking_D__ShowA__5AEE82B9");

                    b.Navigation("Booking");

                    b.Navigation("Service");

                    b.Navigation("ShowAsignment");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Customer", b =>
                {
                    b.HasOne("EasyTicketsSolution.WebApp.Data.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Customer__UserId__5441852A");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Room", b =>
                {
                    b.HasOne("EasyTicketsSolution.WebApp.Data.Theater", "Theater")
                        .WithMany("Rooms")
                        .HasForeignKey("TheaterId")
                        .HasConstraintName("FK__Room__TheaterId__3D5E1FD2");

                    b.Navigation("Theater");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Service", b =>
                {
                    b.HasOne("EasyTicketsSolution.WebApp.Data.Theater", "Theater")
                        .WithMany("Services")
                        .HasForeignKey("TheaterId")
                        .HasConstraintName("FK__Service__Theater__3A81B327");

                    b.Navigation("Theater");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.ShowAsignment", b =>
                {
                    b.HasOne("EasyTicketsSolution.WebApp.Data.Product", "Product")
                        .WithMany("ShowAsignments")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ShowAsign__Produ__440B1D61");

                    b.HasOne("EasyTicketsSolution.WebApp.Data.Room", "Room")
                        .WithMany("ShowAsignments")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK__ShowAsign__RoomI__44FF419A");

                    b.Navigation("Product");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("EasyTicketsSolution.WebApp.Data.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRole__RoleId__5070F446");

                    b.HasOne("EasyTicketsSolution.WebApp.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRole__UserId__4F7CD00D");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Booking", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Product", b =>
                {
                    b.Navigation("ShowAsignments");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Room", b =>
                {
                    b.Navigation("ShowAsignments");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Service", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.ShowAsignment", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.Theater", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("EasyTicketsSolution.WebApp.Data.User", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
